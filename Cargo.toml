[package]
name = "gemini-rust"
version = "0.1.0"
edition = "2021"
authors = ["tapirro <tabootask@gmail.com>"]
description = "A comprehensive Rust client for Google's Gemini API with full feature support"
documentation = "https://docs.rs/gemini-rust"
repository = "https://github.com/tapirro/gemini-rust"
license = "MIT OR Apache-2.0"
keywords = ["gemini", "google", "ai", "llm", "api"]
categories = ["api-bindings", "asynchronous"]
readme = "README.md"

[dependencies]
# HTTP client with async support
reqwest = { version = "0.12", features = ["json", "stream", "rustls-tls"] }

# Async runtime
tokio = { version = "1", features = ["macros", "rt", "sync", "time"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"

# Logging/tracing
tracing = "0.1"

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# Async streams
futures = "0.3"

# Random for jitter
rand = "0.8"

# Human-readable duration serialization
humantime-serde = "1.1"

# UUID generation for cache IDs
uuid = { version = "1.10", features = ["v4", "serde"] }

[dev-dependencies]
# For tests
tokio = { version = "1", features = ["full"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
dotenv = "0.15"
anyhow = "1.0"

[features]
default = ["full"]
full = ["grounding", "caching", "functions", "thinking", "streaming"]
grounding = []
caching = []
functions = []
thinking = []
streaming = []

# Enable rustdoc features
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]